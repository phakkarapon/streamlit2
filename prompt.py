import streamlit as st
from PIL import Image
import requests
from io import BytesIO

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å URL
def load_image_from_url(url):
    response = requests.get(url)
    return Image.open(BytesIO(response.content))

# URL ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
image_urls = [
    "https://cdn.britannica.com/39/226539-050-D21D7721/Portrait-of-a-cat-with-whiskers-visible.jpg",
    "https://upload.wikimedia.org/wikipedia/commons/3/3a/Cat03.jpg",
    "https://cdn.pixabay.com/photo/2017/11/09/21/41/cat-2934720_1280.jpg"
]

# ‡πÇ‡∏´‡∏•‡∏î‡∏†‡∏≤‡∏û‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
images = [load_image_from_url(url) for url in image_urls]

st.title("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏û‡πÅ‡∏°‡∏ß | ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î | ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡πÅ‡∏Å‡∏ô X/Y")

# ‡πÅ‡∏™‡∏î‡∏á thumbnail ‡∏Ç‡∏≠‡∏á‡∏ó‡∏±‡πâ‡∏á 3 ‡∏£‡∏π‡∏õ
cols = st.columns(3)
for i, col in enumerate(cols):
    with col:
        if st.button(f"‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà {i+1}"):
            st.session_state.selected_image = i
        st.image(images[i], use_column_width=True, caption=f"‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà {i+1}")

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏†‡∏≤‡∏û‡πÉ‡∏î (‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: ‡∏†‡∏≤‡∏û‡πÅ‡∏£‡∏Å)
selected_index = st.session_state.get("selected_image", 0)
selected_image = images[selected_index]

st.subheader(f"‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å (‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà {selected_index+1})")

# Slider ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏†‡∏≤‡∏û (0.0 - 1.0)
scale = st.slider("‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏†‡∏≤‡∏û (0 = ‡πÄ‡∏•‡πá‡∏Å‡∏™‡∏∏‡∏î, 1 = ‡πÉ‡∏´‡∏ç‡πà‡∏™‡∏∏‡∏î)", 0.0, 1.0, 1.0, step=0.01)

# ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ç‡∏ô‡∏≤‡∏î‡∏†‡∏≤‡∏û‡πÉ‡∏´‡∏°‡πà
if scale == 0.0:
    resized_width = 100
else:
    resized_width = int(selected_image.width * scale)
resized_height = int(resized_width * selected_image.height / selected_image.width)
resized_image = selected_image.resize((resized_width, resized_height))

# ‡πÅ‡∏™‡∏î‡∏á‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà resize ‡πÅ‡∏•‡πâ‡∏ß
st.image(resized_image, caption=f"‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà {selected_index+1} (‡∏Ç‡∏ô‡∏≤‡∏î: {scale:.2f})")

# ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡∏ô‡∏≤‡∏î‡πÅ‡∏Å‡∏ô X/Y
st.write(f"üìè ‡∏Ç‡∏ô‡∏≤‡∏î‡∏†‡∏≤‡∏û‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô:")
st.markdown(f"- ‡πÅ‡∏Å‡∏ô **X (‡∏Å‡∏ß‡πâ‡∏≤‡∏á)**: `{resized_width}px`")
st.markdown(f"- ‡πÅ‡∏Å‡∏ô **Y (‡∏™‡∏π‡∏á)**: `{resized_height}px`")
